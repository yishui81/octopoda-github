
# Copyright (C) Igor Sysoev
# Copyright (C) Nginx, Inc.


echo $oc_n "checking for $oc_type size ...$oc_c"

cat << END >> $OC_AUTOCONF_ERR

----------------------------------------
checking for $oc_type size

END

oc_size=

cat << END > $OC_AUTOTEST.cpp

#include <sys/types.h>
#include <sys/time.h>
$OC_INCLUDE_UNISTD_H
#include <signal.h>
#include <stdio.h>
#include <sys/resource.h>
$OC_INCLUDE_INTTYPES_H
$OC_INCLUDE_AUTO_CONFIG_H

int main() {
    printf("%d", (int) sizeof($oc_type));
    return 0;
}

END


oc_test="$CC $CC_TEST_FLAGS $CC_AUX_FLAGS \
          -o $OC_AUTOTEST $OC_AUTOTEST.cpp $OC_LD_OPT $oc_feature_libs"

eval "$oc_test >> $OC_AUTOCONF_ERR 2>&1"


if [ -x $OC_AUTOTEST ]; then
    oc_size=`$OC_AUTOTEST`
    echo " $oc_size bytes"
fi


rm -f $OC_AUTOTEST


case $oc_size in
    4)
        if [ "$oc_type"="long" ]; then
            oc_max_value=2147483647L
        else
            oc_max_value=2147483647
        fi

        oc_max_len='(sizeof("-2147483648") - 1)'
    ;;

    8)
        if [ "$oc_type"="long long" ]; then
            oc_max_value=9223372036854775807LL
        else
            oc_max_value=9223372036854775807L
        fi

        oc_max_len='(sizeof("-9223372036854775808") - 1)'
    ;;

    *)
        echo
        echo "$0: error: can not detect $oc_type size"

        echo "----------"    >> $OC_AUTOCONF_ERR
        cat $OC_AUTOTEST.cpp  >> $OC_AUTOCONF_ERR
        echo "----------"    >> $OC_AUTOCONF_ERR
        echo $oc_test       >> $OC_AUTOCONF_ERR
        echo "----------"    >> $OC_AUTOCONF_ERR

        exit 1
esac

